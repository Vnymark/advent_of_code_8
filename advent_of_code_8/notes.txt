I need to subtract the parts of the license file that isn't meta data.
Or
I need to subtract the metadata in the license file and add to a variable.
To calculate the sum of the metadata entries.



Maybe I can have two lists of all the numbers.
I can count childs, and metadata.
I add children to a list of childrens and metadata count to a count of metadata.
If child is > 0 I add the read the next two numbers as a header.
For every first number in the header, I add it to the childList.
For every second number in the header, I add to a counter of metadataList.

I need to remove the number from the list as soon as it is used.
And I need to be able to handle the different list and their functions without regard of the other.

So, a list with each number and a int with the sum of MetaData.


Part 2:

If I can use my existing functions to add Node objects.
Node:
Int NumberOfChildren, Int NumberOfMetaData, Node Parent, List<Int> Metadata.

I might be able to add a counter to ParseHeader() to count( int NodeCounter) each time it parses a new header.
When it parses a new Header, it creates a new Node and adds the Header-data to the Node.
Then when AddMetaData() adds metaData, I could add that data to a list for MetaData.
When metadata has been added correctly, that node is saved, in the Children at the index of NodeCounter.
Then NodeCounter is subtracted by one.







	
	
 
